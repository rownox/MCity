@inject ILearnPageState LearnPageState
@inject NavigationManager NavigationManager
@inject ILearnPageService LearnPageService
@inject ILearnTopicService LearnTopicService

<div class="topic" @key="Topic.Id">
   <div class="title" @onclick="() => LearnPageState.ToggleTopicVisibility(Topic.Id)">
      <p id="drop-icon">@(LearnPageState.OpenTopicIds.Contains(Topic.Id) ? "⯆" : "⯈")</p>
      <p>@Topic.Title</p>
   </div>
   <div class="subset" style="display: @(LearnPageState.OpenTopicIds.Contains(Topic.Id) ? "flex" : "none");">
      @foreach (var subPage in Topic.Pages) {
         <a class="sub-item @(LearnPageState.SelectedPageId == subPage.Id ? "active" : "")"
            @key="subPage.Id"
            @onclick="() => SelectPage(Topic.Id, subPage.Id)">@subPage.Title</a>
      }
      @foreach (var subTopic in Topic.SubTopics) {
         <TopicTreeItem Topic="subTopic" />
      }
   </div>
</div>

@code {
   [Parameter] public LearnTopic Topic { get; set; } = null!;

   private void SelectPage(int topicId, int pageId) {
      LearnPageState.SelectedPageId = pageId;
      NavigationManager.NavigateTo($"/learn/{topicId}/{pageId}");
   }
}