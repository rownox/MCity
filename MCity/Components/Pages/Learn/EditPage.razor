@page "/learn/edit-page/{id:int}"
@inject NavigationManager Navigation
@inject ILearnPageService LearnPageService


<div class="learn-ctnr">
   <div class="form-ctnr">
      <p class="title">Edit Page #@id</p>
      <EditForm class="form" Model="@learnPage" OnValidSubmit="HandleSubmit" FormName="editPage">
         <DataAnnotationsValidator />
         <ValidationSummary />

         <label>Topic ID</label>
         <InputNumber class="input" @bind-Value="learnPage.LearnTopicId">@learnPage.LearnTopicId</InputNumber>

         <label>Title</label>
         <InputText class="input" @bind-Value="learnPage.Title">@learnPage.Title</InputText>

         <label>Content</label>
         <InputTextArea class="input" @bind-Value="learnPage.Content">@learnPage.Content</InputTextArea>

         <button type="submit" class="btn">Submit</button>
      </EditForm>
   </div>
</div>

@code {
   [SupplyParameterFromForm]
   private LearnPage learnPage { get; set; } = new LearnPage();

   [Parameter]
   public int id { get; set; }

   protected override async Task OnInitializedAsync() {
      var existingPage = await LearnPageService.GetPageById(id);
      if (existingPage != null) {
         learnPage = existingPage;
      }
   }

   async Task HandleSubmit() {
      await LearnPageService.UpdatePage(learnPage);
      Navigation.NavigateTo("/learn");
   }
}
